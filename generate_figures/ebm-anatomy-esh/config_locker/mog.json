{
  "_comment": "===== EXPERIMENT PARAMETERS =====",
  "_comment": "number of training iterations",
  "num_train_iters": 10000,
  "_comment": "number of training samples and synthesized samples per model update",
  "batch_size": 100,
  "_comment": "random seed",
  "seed": 123,
  "_comment": "===== TOY DATA PARAMETERS =====",
  "_comment": "toy_type should use one of the following: rings, gmm",
  "toy_type": "gmm",
  "_comment": "number of groups of toy images",
  "toy_groups": 8,
  "_comment": "smallest local standard deviation of toy density",
  "toy_sd": 1.5e-1,
  "_comment": "distance of toy group from origin",
  "toy_radius": 1.0,
  "_comment": "resolution of landscape visualizations",
  "viz_res": 200,
  "_comment": "bandwidth of kernel density estimate for short-run samples",
  "kde_bw": 0.075,
  "_comment": "===== NETWORK AND OPTIMIZER =====",
  "_comment": "structure for network (toy)",
  "net_type": "toy",
  "_comment": "optimizer_type should use one of the following: sgd, adam",
  "optimizer_type": "sgd",
  "_comment": "initial learning rate for training",
  "lr_init": 1e-1,
  "_comment": "minimum learning rate for training",
  "lr_min": 1e-1,
  "_comment": "exponential decay for learning rate at each step (halt at lr_min)",
  "lr_decay": 1.0,
  "_comment": "===== LANGEVIN SAMPLING =====",
  "_comment": "langevin step size and noise magnitude (set to 0 for noiseless learning)",
  "epsilon": 0.1,
  "_comment": "number of langevin steps for training",
  "num_mcmc_steps": 50,
  "_comment": "init_type should use one of the following: persistent, data, uniform, gaussian",
  "init_type": "uniform",
  "_comment": "number of persistent images for training (used when init_type is set to persistent)",
  "s_t_0_size": 10000,
  "_comment": "factor to multiply noise distribution (used when init_type is uniform or gaussian)",
  "noise_init_factor": 2.0,
  "_comment": "===== DIAGNOSTIC PARAMETERS =====",
  "_comment": "frequency of saving network, images, and plots",
  "log_info_freq": 100,
  "_comment": "frequency of visualizing learned energy and shortrun distributions",
  "log_viz_freq": 1000,
  "_comment": "number of samples to generate short-run kernel density estimate",
  "batch_size_kde": 10000
}